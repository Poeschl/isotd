plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id 'org.jetbrains.kotlin.kapt' version '1.3.11'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.11' apply false
    id 'idea'
}

group 'io.github.poeschl'

allprojects {
    buildscript {
        repositories {
            jcenter()
            mavenCentral()
        }
    }

    wrapper {
        distributionType = Wrapper.DistributionType.ALL
        gradleVersion = '5.0'
    }

    repositories {
        jcenter()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.kapt'
    apply plugin: 'idea'

    if (project.hasProperty("openClassesForTest")) {
        apply plugin: 'org.jetbrains.kotlin.plugin.allopen'
        allOpen {
            annotation('io.github.poeschl.isotd.shortcutprovider.models.Mockable')
        }
    }

    sourceCompatibility = JavaVersion.VERSION_1_8

    compileKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "failed"
        }
    }

    dependencies {
        compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:slf4j-simple:$slf4jVersion"

        compile "com.google.dagger:dagger:$daggerVersion"
        kapt "com.google.dagger:dagger-compiler:$daggerVersion"

        testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testCompile 'org.assertj:assertj-core:3.11.1'
        testCompile 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0'

        testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }
}
